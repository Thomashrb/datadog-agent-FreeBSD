#!/bin/sh

# $FreeBSD$
#
# PROVIDE: datadog_collector
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# Add these lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# datadog_collector (bool):    	Set to NO by default.
#      				Set it to YES to enable datadog.
#

. /etc/rc.subr

name=datadog_collector
rcvar=datadog_collector_enable

load_rc_config $name

: ${datadog_collector_enable:="NO"}
: ${datadog_collector_user="datadog"}

command="%%PYTHON_SITELIBDIR%%/%%PORTNAME%%/agent.py"
command_interpreter="%%PYTHON_CMD%%"

required_files=%%ETCDIR%%/datadog.conf
pidfile="%%RUNDIR%%/collector.pid"

extra_commands="status restart info configcheck check"

start_cmd="${name}_start"
stop_cmd="${name}_stop"
status_cmd="${name}_status"
restart_cmd="${name}_restart"
info_cmd="${name}_info"
configcheck_cmd="${name}_configcheck"
check_cmd="${name}_check"

datadog_collector_start()
{
	su -m %%USER%% -c "${command_interpreter} ${command} start"
}

datadog_collector_stop()
{
	su -m %%USER%% -c "${command_interpreter} ${command} stop"
}

datadog_collector_status()
{		
	rc_pid=`check_pidfile ${pidfile} ${command} ${command_interpreter}`
	if [ -n "${rc_pid}" ]; then
		echo "Datadog collector is running as pid ${rc_pid}."
	else
		echo "Datadog collector is not running."
		return 1
	fi
}

datadog_collector_restart()
{
	su -m %%USER%% -c "${command_interpreter} ${command} restart"
}

datadog_collector_info()
{
	su -m %%USER%% -c "${command_interpreter} ${command} info $@"
	exit $?
}

datadog_collector_configcheck()
{
	su -m %%USER%% -c "${command_interpreter} ${command} configcheck"
	exit $?
}

datadog_collector_check()
{
	su -m %%USER%% -c "${command_interpreter} ${command} check $@"
	exit $?
}

run_rc_command "$@"

