#!/bin/sh

# $FreeBSD$
#
# PROVIDE: datadog
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# Add these lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# datadog_enable (bool):	Set to NO by default.
#				Set it to YES to enable datadog.
# datadog_user (username):      Set to root by default.
#

. /etc/rc.subr

name=datadog
rcvar=datadog_enable

load_rc_config $name

: ${datadog_enable:="NO"}
: ${datadog_config="%%ETCDIR%%/datadog.conf"}
: ${datadog_user="datadog"}

command_args="-m ${datadog_user} -c "
command_interpreter="%%PYTHON_CMD%%"

required_files="${datadog_config}"
pidfile="%%RUNDIR%%/agent.pid"

agent="%%PYTHON_SITELIBDIR%%/%%PORTNAME%%/agent.py"

required_files="${datadog_config}"

extra_commands="reload info configcheck check"

start_cmd="${name}_start"
stop_cmd="${name}_stop"
reload_cmd="${name}_reload"
info_cmd="${name}_info"
configcheck_cmd="${name}_configcheck"
check_cmd="${name}_check"

datadog_reload()
{
	su -m ${datadog_user} -c "${command_interpreter} ${agent} restart"
}

datadog_start()
{
	su -m ${datadog_user} -c "${command_interpreter} ${agent} start"
}

datadog_stop()
{
    su -m ${datadog_user} -c "${command_interpreter} ${agent} stop"
}

datadog_info()
{
	su -m ${datadog_user} -c "${command_interpreter} ${agent} info $@"
    exit $?
}

datadog_configcheck()
{
	su -m ${datadog_user} -c "${command_interpreter} ${agent} configcheck"
	exit $?
}

datadog_check()
{	
	su -m ${datadog_user} -c "${command_interpreter} ${agent} check $@"
	exit $?
}

run_rc_command "$@"
